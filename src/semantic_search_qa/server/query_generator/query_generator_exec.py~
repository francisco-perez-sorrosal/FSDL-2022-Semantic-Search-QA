from jina import DocumentArray, Document, Executor, requests

from semantic_search_qa.server.server_utils import log_exec_basics

class QueryGeneratorExecutor(Executor):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)

    @requests(on="/query_generator")
    async def generate_queries(self, docs: DocumentArray, **kwargs):
        """
        Generate sample queries from text chunks.
        The queries will then be stored in 'docs[i]._data.chunks[j].text'
        """
        log_exec_basics(self.metas.name, self.logger, docs, kwargs)
        
        try:
            num_queries = int(kwargs["parameters"]["num_queries"])
        except KeyError:
            self.logger.warning("Couldn't extract num_queries from Document parameters. Using default of 3")
            num_queries = 3

        query_gen = Executor.from_hub("jinahub://Doc2QueryExecutor", uses_with={'num_questions':3}, install_requirements=True)
        docs = query_gen.index(docs)
